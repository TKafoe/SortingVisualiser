{"version":3,"sources":["pages/sorting_visualisation/sorting_algorithms/MergeSort.js","pages/sorting_visualisation/sketches/BarSketch.js","pages/sorting_visualisation/components/SortingSketchComponent.js","pages/sorting_visualisation/SortingVisualisationsPage.js","App.js","index.js"],"names":["MergeSort","arr","steps","copyArr","slice","this","mergeSort","length","arr2","begin","end","mid","Math","floor","l","r","midOfOriginal","sortedLeft","sortedRight","merged","merge","i","newArr","push","arr1","sortedArray","Array","j","k","BarSketch","id","sortingAlgorithm","barsShuffled","shuffle","from","keys","getSortingAlgorithm","sort","bars","p5","p","setup","createCanvas","startTime","millis","draw","barSize","height","fill","background","forEach","bar","index","widthBarSpace","width","rect","temporaryValue","randomIndex","currentIndex","random","SortingSketchComponent","className","React","Component","Content","Layout","TabPane","Tabs","SortingVisualisationsPage","defaultActiveKey","tab","key","style","padding","Header","Footer","App","theme","mode","defaultSelectedKeys","Item","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e4bbbc1.chunk.js","sourcesContent":["export class MergeSort {\n  sort(arr) {\n    const steps = [];\n    const copyArr = arr.slice();\n    this.mergeSort(arr, copyArr, steps, 0, arr.length - 1);\n    return steps;\n  }\n\n  mergeSort(arr, arr2, steps, begin, end) {\n    if (arr.length > 1) {\n      const mid = Math.floor(arr.length / 2);\n      const l = arr.slice(0, mid);\n      const r = arr.slice(mid);\n\n      const midOfOriginal = Math.floor((end + begin) / 2);\n      const sortedLeft = this.mergeSort(l, arr2, steps, begin, midOfOriginal);\n      const sortedRight = this.mergeSort(r, arr2, steps, midOfOriginal, end);\n      const merged = this.merge(sortedLeft, sortedRight);\n\n      for (let i = 0; i < merged.length; i++) {\n        arr2[begin + i] = merged[i];\n      }\n      const newArr = arr2.slice();\n      steps.push(newArr);\n\n      return merged;\n    }\n\n    return arr;\n  }\n\n  merge(arr1, arr2) {\n    const sortedArray = Array(arr1.length + arr2.length);\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    while (i < arr1.length && j < arr2.length) {\n      if (arr1[i] < arr2[j]) {\n        sortedArray[k] = arr1[i];\n        i++;\n      } else {\n        sortedArray[k] = arr2[j];\n        j++;\n      }\n      k++;\n    }\n\n    while (i < arr1.length) {\n      sortedArray[k] = arr1[i];\n      i++;\n      k++;\n    }\n\n    while (j < arr2.length) {\n      sortedArray[k] = arr2[j];\n      j++;\n      k++;\n    }\n\n    return sortedArray;\n  }\n}","import p5 from 'p5';\nimport { MergeSort } from '../sorting_algorithms/MergeSort';\n\nexport class BarSketch {\n    constructor(id, sortingAlgorithm) {\n        const barsShuffled = shuffle(Array.from(Array(100).keys()));\n        const strategy = getSortingAlgorithm(sortingAlgorithm);\n        const steps = strategy.sort(barsShuffled);\n        let i = 0;\n        let bars = steps[i];\n\n        new p5(p => {\n            p.setup = () => {\n                p.createCanvas(1600, 400);\n                this.startTime = p.millis();\n            }\n\n            p.draw = () => {\n                bars = steps[i];\n                const barSize = p.height / (bars.length + 10);\n                if (p.millis() - this.startTime > 50 && i < steps.length - 1) {\n                    this.startTime = p.millis();\n                    i++;\n                }\n\n                if (i === steps.length - 1 && p.millis() - this.startTime < 1000) {\n                    p.fill(0, 255, 0)\n                } else if (i === steps.length - 1 && p.millis() - this.startTime >= 1000) {\n                    this.startTime = p.millis();\n                    i = 0;\n                } else {\n                    p.fill(255);\n                }\n\n                p.background(55);\n                bars.forEach((bar, index) => {\n                    const height = bar * barSize;\n                    const widthBarSpace = p.width / bars.length;\n\n                    p.rect(index * widthBarSpace, 390 - height, widthBarSpace, height);\n                })\n            }\n        }, id);\n    }\n}\n\nconst getSortingAlgorithm = (sortingAlgorithm) => {\n    switch(sortingAlgorithm) {\n        case \"mergeSort\": {\n                return new MergeSort();\n            break;\n        }\n    }\n}\n\nconst shuffle = (bars) => {\n    let currentIndex = bars.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        temporaryValue = bars[currentIndex];\n        bars[currentIndex] = bars[randomIndex];\n        bars[randomIndex] = temporaryValue;\n    }\n    return bars;\n}","import React from 'react';\nimport { BarSketch } from \"../sketches/BarSketch\";\n\nimport \"./SketchComponent.css\"\n\nexport class SortingSketchComponent extends React.Component {\n    componentDidMount() {\n        new BarSketch(\"sketch1\", \"mergeSort\");\n    }\n\n    render() {\n        return (\n            <div className=\"sketch\" id=\"sketch1\"/>\n        )\n    }\n}","import React from 'react';\nimport { Divider, Layout, Tabs } from \"antd\";\nimport { SortingSketchComponent } from \"./components/SortingSketchComponent\";\n\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nexport class SortingVisualisationsPage extends React.Component {\n    render() {\n        return (\n            <div className=\"site-layout-content\">\n                <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"MergeSort\" key=\"1\">\n                        <Content style={{ padding: '0 50px' }}>\n                                <Divider>A visualisation to show the merge sort algorithm.</Divider>\n                                <SortingSketchComponent />\n                        </Content>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { SortingVisualisationsPage } from \"./pages/sorting_visualisation/SortingVisualisationsPage\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  return (\n      <Layout className=\"layout\">\n          <Header>\n              <div className=\"logo\" />\n              <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                  <Menu.Item key=\"1\">Sorting Visualisations</Menu.Item>\n              </Menu>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <SortingVisualisationsPage />\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Tom Kafoe 2020</Footer>\n      </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}